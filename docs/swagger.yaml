basePath: /
definitions:
  models.Item:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  models.ResponseUser:
    properties:
      message:
        type: string
      status:
        type: string
      token omitempty:
        type: string
    type: object
  models.User:
    properties:
      id:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple API that demonstrates JWT authentication and MongoDB
    integration.
  title: Go API with JWT and MongoDB
  version: "1.0"
paths:
  /items:
    get:
      description: Fetch a list of all items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Items
      tags:
      - Items
    post:
      description: add a new item
      parameters:
      - description: Item Data
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add Item
      tags:
      - Items
  /items/{id}:
    get:
      description: Fetch details of a specific item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Item by ID
      tags:
      - Items
  /login:
    post:
      consumes:
      - application/json
      description: Login a user and return a JWT token
      parameters:
      - description: Login Data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseUser'
      summary: Login
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: body
        "400":
          description: Bad Request
          schema:
            type: body
      summary: Register
      tags:
      - Auth
swagger: "2.0"
